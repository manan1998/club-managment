/*How to send the clubid to the sql
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author manan
 */import java.awt.event.*;
 import java.sql.*;
public class Register extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form REGISTER
     */SQLDEMO sobj;
     PreparedStatement pst;
     ResultSet rst;
     long cd[];
     long id;
    public Register() {
        
        cd =new long[100];
        int i=0;
        sobj=new SQLDEMO();
        initComponents();
        SaveButton.addActionListener(this);
        ResetButton.addActionListener(this);
        UpdateButton.addActionListener(this);
        SearchButton.addActionListener(this);
        sobj.Connect();
        try{i=1;
            pst=sobj.con.prepareStatement("Select ClubId,Name from tbClub");
            rst=pst.executeQuery();
            while(rst.next()){
                cd[i]=rst.getInt(1);
                i++;
                ClubComboBox.addItem(rst.getString(2).trim());
            }
            rst.close();
        }
        catch(Exception ex){
            ErrorLabel.setText("Error"+ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void actionPerformed(ActionEvent ae){
        if(ae.getSource()==SaveButton){
    if(NameTField.getText().equals(""))
        ErrorLabel.setText("Name of the applicant cannot be left blank");
    if(CourseTField.getText().equals(""))
        ErrorLabel.setText("Course of the applicant cannot be left blank");
    if(YearTField.getText().equals(""))
        ErrorLabel.setText("Year of the applicant cannot be left blank");
    if(RollnoTField.getText().equals(""))
        ErrorLabel.setText("Roll number of the applicant cannot be left blank");    
    if(PhonenoTField.getText().equals(""))
        ErrorLabel.setText("Contact number of the applicant cannot be left blank");
    if(EmailTField.getText().equals(""))
        ErrorLabel.setText("Email of the applicant cannot be left blank");
    if(AddressTField.getText().equals(""))
        ErrorLabel.setText("Address of the applicant cannot be left blank");
    if(CityTField.getText().equals(""))
        ErrorLabel.setText("City of the applicant cannot be left blank");
    if(Skill1TField.getText().equals(""))
        ErrorLabel.setText("Skill 1 cannot be left blank");
    if(Skill2TField.getText().equals(""))
        ErrorLabel.setText("Skill 2 cannot be left blank");
    if(DateTField.getText().equals(""))
        ErrorLabel.setText("Registration date cannot be left blank");
    if(AmntPaidTField.getText().equals(""))
        ErrorLabel.setText("Amount paid by the applicant cannot be left blank");
    if(BalanceTField.getText().equals(""))
        ErrorLabel.setText("Balance amount cannot be left blank");
    else{
        try{
            
            pst=sobj.con.prepareCall("{call prcInsertMemRegister(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
            pst.setString(1,NameTField.getText());
            pst.setString(2,CourseTField.getText());
            pst.setInt(3,Integer.parseInt(YearTField.getText()));
            pst.setLong(4,Long.parseLong(RollnoTField.getText()));
            pst.setLong(5,Long.parseLong(PhonenoTField.getText()));
            pst.setString(6,EmailTField.getText());
            pst.setString(7,AddressTField.getText());
            pst.setString(8,CityTField.getText());
            pst.setString(9,Skill1TField.getText());
            pst.setString(10,Skill2TField.getText());
            pst.setLong(11,cd[ClubComboBox.getSelectedIndex()]);
            pst.setString(12,DateTField.getText());
            pst.setInt(13,Integer.parseInt(AmntPaidTField.getText()));
            pst.setInt(14,Integer.parseInt(BalanceTField.getText()));
                   
            if(pst.execute()== false){
                ErrorLabel.setText("The registration for club has been successfully done");
            }
            else{
                ErrorLabel.setText("Error occured");
                }
        }
        catch(Exception ex){
            ErrorLabel.setText("Error "+ex);
                           }
        sobj.Disconnect();
    }
    }
    if(ae.getSource()==ResetButton){
    NameTField.setText("");
    CourseTField.setText("");
    YearTField.setText("");
    RollnoTField.setText("");
    PhonenoTField.setText("");
    EmailTField.setText("");
    AddressTField.setText("");
    CityTField.setText("");
    Skill1TField.setText("");
    Skill2TField.setText("");
    DateTField.setText("");
    AmntPaidTField.setText("");
    BalanceTField.setText("");
    }
    if(ae.getSource()==UpdateButton){
    if(id<0)
        ErrorLabel.setText("Please make a search toh update the values");
    else{
    if(NameTField.getText().equals(""))
        ErrorLabel.setText("Name of the applicant cannot be left blank");
    if(CourseTField.getText().equals(""))
        ErrorLabel.setText("Course of the applicant cannot be left blank");
    if(YearTField.getText().equals(""))
        ErrorLabel.setText("Year of the applicant cannot be left blank");
    if(RollnoTField.getText().equals(""))
        ErrorLabel.setText("Roll number of the applicant cannot be left blank");    
    if(PhonenoTField.getText().equals(""))
        ErrorLabel.setText("Contact number of the applicant cannot be left blank");
    if(EmailTField.getText().equals(""))
        ErrorLabel.setText("Email of the applicant cannot be left blank");
    if(AddressTField.getText().equals(""))
        ErrorLabel.setText("Address of the applicant cannot be left blank");
    if(CityTField.getText().equals(""))
        ErrorLabel.setText("City of the applicant cannot be left blank");
    if(Skill1TField.getText().equals(""))
        ErrorLabel.setText("Skill 1 cannot be left blank");
    if(Skill2TField.getText().equals(""))
        ErrorLabel.setText("Skill 2 cannot be left blank");
    if(DateTField.getText().equals(""))
        ErrorLabel.setText("Registration date cannot be left blank");
    if(AmntPaidTField.getText().equals(""))
        ErrorLabel.setText("Amount paid by the applicant cannot be left blank");
    if(BalanceTField.getText().equals(""))
        ErrorLabel.setText("Balance amount cannot be left blank");
    else{
        try{
            pst=sobj.con.prepareCall("{call prcInsertMemRegister(?,?,?,?,?,?,?,?,?,?,?,?,?)}");
            pst.setString(1,NameTField.getText());
            pst.setString(2,CourseTField.getText());
            pst.setInt(3,Integer.parseInt(YearTField.getText()));
            pst.setLong(4,Long.parseLong(RollnoTField.getText()));
            pst.setLong(5,Long.parseLong(PhonenoTField.getText()));
            pst.setString(6,EmailTField.getText());
            pst.setString(7,AddressTField.getText());
            pst.setString(8,CityTField.getText());
            pst.setString(9,Skill1TField.getText());
            pst.setString(10,Skill2TField.getText());
            pst.setLong(11,cd[ClubComboBox.getSelectedIndex()]);
            pst.setString(12,DateTField.getText());
            pst.setInt(13,Integer.parseInt(AmntPaidTField.getText()));
            pst.setInt(14,Integer.parseInt(BalanceTField.getText()));
                   
            if(pst.execute()== false){
                ErrorLabel.setText("The registration for club has been successfully done");
            }
            else{
                ErrorLabel.setText("Error occured");
                }
        }
        catch(Exception ex){
            ErrorLabel.setText("Error "+ex);
                           }
        sobj.Disconnect();
    }}}
    if(ae.getSource()==SearchButton){
        sobj.Connect();
        id=-1;
        try{
            if("".equals(NameTField.getText()))
                ErrorLabel.setText("Please enter the Name of the member for searching");
            pst=sobj.con.prepareStatement("Select * from tbMemRegister where Name=?");
            pst.setString(1,NameTField.getText());
            rst=pst.executeQuery();
            if(rst.next()){
                id=rst.getLong(1);
                ClubComboBox.setSelectedIndex(new ArraySearch().searchArray(cd,rst.getLong(12)));
                CourseTField.setText(rst.getString(3));
                YearTField.setText(Integer.toString(rst.getInt(4)));
                RollnoTField.setText(Long.toString(rst.getLong(5)));
                PhonenoTField.setText(Long.toString(rst.getLong(6)));
                EmailTField.setText(rst.getString(7));
                AddressTField.setText(rst.getString(8));
                CityTField.setText(rst.getString(9));
                Skill1TField.setText(rst.getString(10));
                Skill2TField.setText(rst.getString(11));
                DateTField.setText(rst.getString(13));
                AmntPaidTField.setText(Integer.toString(rst.getInt(14)));
                BalanceTField.setText(Integer.toString(rst.getInt(15)));
                StatusTField.setText(rst.getString(16));
            }
            rst.close();
        }
       catch(Exception ex){
            ErrorLabel.setText("Error"+ex);
       }}
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeadLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        NameTField = new javax.swing.JTextField();
        CourseLabel = new javax.swing.JLabel();
        CourseTField = new javax.swing.JTextField();
        YearLabel = new javax.swing.JLabel();
        YearTField = new javax.swing.JTextField();
        RollnoLabel = new javax.swing.JLabel();
        PhonenoLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        CityLabel = new javax.swing.JLabel();
        Skill1Label = new javax.swing.JLabel();
        Skill2Label = new javax.swing.JLabel();
        ClubidLabel = new javax.swing.JLabel();
        DateLabel = new javax.swing.JLabel();
        AmntPaidLabel = new javax.swing.JLabel();
        BalanceLabel = new javax.swing.JLabel();
        StatusLabel = new javax.swing.JLabel();
        RollnoTField = new javax.swing.JTextField();
        PhonenoTField = new javax.swing.JTextField();
        EmailTField = new javax.swing.JTextField();
        AddressTField = new javax.swing.JTextField();
        CityTField = new javax.swing.JTextField();
        Skill1TField = new javax.swing.JTextField();
        Skill2TField = new javax.swing.JTextField();
        DateTField = new javax.swing.JTextField();
        AmntPaidTField = new javax.swing.JTextField();
        BalanceTField = new javax.swing.JTextField();
        StatusTField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        ClubComboBox = new javax.swing.JComboBox<>();
        ErrorLabel = new javax.swing.JLabel();
        UpdateButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HeadLabel.setText("Registration form for Club");

        NameLabel.setText("Name of applicant");

        NameTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTFieldActionPerformed(evt);
            }
        });

        CourseLabel.setText("Course ");

        YearLabel.setText("Year");

        YearTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearTFieldActionPerformed(evt);
            }
        });

        RollnoLabel.setText("Roll No.");

        PhonenoLabel.setText("Phone Number");

        EmailLabel.setText("E-mail ID");

        AddressLabel.setText("Address");

        CityLabel.setText("City");

        Skill1Label.setText("Skill 1");

        Skill2Label.setText("Skill 2");

        ClubidLabel.setText("Club ID");

        DateLabel.setText("Registration Date");

        AmntPaidLabel.setText("Amount Paid");

        BalanceLabel.setText("Balance");

        StatusLabel.setText("Status");

        RollnoTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RollnoTFieldActionPerformed(evt);
            }
        });

        AddressTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressTFieldActionPerformed(evt);
            }
        });

        AmntPaidTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmntPaidTFieldActionPerformed(evt);
            }
        });

        StatusTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusTFieldActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");

        ClubComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Club" }));

        UpdateButton.setText("Update");

        SearchButton.setText("Search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(StatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BalanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AmntPaidLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ClubidLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Skill2Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Skill1Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CityLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddressLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EmailLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PhonenoLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RollnoLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(YearLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CourseLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NameTField, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(CourseTField)
                            .addComponent(YearTField)
                            .addComponent(RollnoTField)
                            .addComponent(PhonenoTField)
                            .addComponent(EmailTField)
                            .addComponent(AddressTField)
                            .addComponent(CityTField)
                            .addComponent(Skill1TField)
                            .addComponent(Skill2TField)
                            .addComponent(DateTField)
                            .addComponent(AmntPaidTField)
                            .addComponent(BalanceTField)
                            .addComponent(StatusTField)
                            .addComponent(ClubComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(HeadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(SaveButton)
                        .addGap(47, 47, 47)
                        .addComponent(ResetButton)
                        .addGap(41, 41, 41)
                        .addComponent(UpdateButton)
                        .addGap(47, 47, 47)
                        .addComponent(SearchButton)))
                .addContainerGap(924, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CourseTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CourseLabel))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(YearLabel)
                    .addComponent(YearTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RollnoLabel)
                    .addComponent(RollnoTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhonenoLabel)
                    .addComponent(PhonenoTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmailLabel)
                    .addComponent(EmailTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddressLabel)
                    .addComponent(AddressTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CityLabel)
                    .addComponent(CityTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Skill1Label)
                    .addComponent(Skill1TField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Skill2Label)
                    .addComponent(Skill2TField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClubidLabel)
                    .addComponent(ClubComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateLabel)
                    .addComponent(DateTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AmntPaidLabel)
                    .addComponent(AmntPaidTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BalanceLabel)
                    .addComponent(BalanceTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StatusLabel)
                    .addComponent(StatusTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(ResetButton)
                    .addComponent(UpdateButton)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTFieldActionPerformed

    private void YearTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearTFieldActionPerformed

    private void RollnoTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RollnoTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RollnoTFieldActionPerformed

    private void AddressTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressTFieldActionPerformed

    private void AmntPaidTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmntPaidTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmntPaidTFieldActionPerformed

    private void StatusTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StatusTFieldActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JTextField AddressTField;
    private javax.swing.JLabel AmntPaidLabel;
    private javax.swing.JTextField AmntPaidTField;
    private javax.swing.JLabel BalanceLabel;
    private javax.swing.JTextField BalanceTField;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JTextField CityTField;
    private javax.swing.JComboBox<String> ClubComboBox;
    private javax.swing.JLabel ClubidLabel;
    private javax.swing.JLabel CourseLabel;
    private javax.swing.JTextField CourseTField;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JTextField DateTField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTField;
    private javax.swing.JLabel ErrorLabel;
    private javax.swing.JLabel HeadLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameTField;
    private javax.swing.JLabel PhonenoLabel;
    private javax.swing.JTextField PhonenoTField;
    private javax.swing.JButton ResetButton;
    private javax.swing.JLabel RollnoLabel;
    private javax.swing.JTextField RollnoTField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel Skill1Label;
    private javax.swing.JTextField Skill1TField;
    private javax.swing.JLabel Skill2Label;
    private javax.swing.JTextField Skill2TField;
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JTextField StatusTField;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel YearLabel;
    private javax.swing.JTextField YearTField;
    // End of variables declaration//GEN-END:variables


  
}
